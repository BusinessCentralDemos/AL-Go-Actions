name: DeployPowerPlatformSolution
author: Andersg
inputs:
  shell:
    description: Shell in which you want to run the action (powershell or pwsh)
    required: false
    default: powershell
  actor:
    description: The GitHub actor running the action
    required: false
    default: ${{ github.actor }}
  token:
    description: The GitHub token running the action
    required: false
    default: ${{ github.token }}
  parentTelemetryScopeJson:
    description: Specifies the parent telemetry scope for the telemetry signal
    required: false
    default: '7b7d'
  artifactPath:
    description: Patch to the artifacts folder
    required: false
    default: '.'
  deploySettings: 
    description: The deploy settings
    required: false
    default: '{}'
  authSettings: 
    description: The auth settings
    required: false
    default: '{}'

runs:
  using: composite
  steps:
    - name: Parse DeployToSettings and AuthContext
      uses: BusinessCentralDemos/AL-Go-Actions/ReadPowerPlatformSettings@PowerPlatform
      with:
        shell: ${{ inputs.shell }}
        parentTelemetryScopeJson: ${{inputs.parentTelemetryScopeJson}}
        deploySettings: ${{ inputs.deploySettings }} 
        authSettings: ${{ inputs.authSettings }}

    - name: Who am I (username)
      if: ${{ env.userName != '' }}
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.environmentUrl}}
        user-name: ${{env.userName}}
        password-secret: ${{env.password}}

    - name: Who am I (application ID)
      if: ${{ env.applicationId != '' }}
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.environmentUrl}}
        tenant-id: ${{env.tenantId}}
        app-id: ${{env.applicationId}}
        client-secret: ${{env.clientSecret}}

    - name: findSolutionFile
      shell: ${{ inputs.shell }}
      run: |
            $filePaths = Get-ChildItem -Path ${{inputs.artifactPath}} -Recurse -File | Select-Object -ExpandProperty FullName
            foreach($file in $filePaths){
                if($file.contains("-PowerPlatformSolution-")){
                    Write-Host "Power Platform solution file:"$file
                    ## echo "powerPlatformSolutionPath=$file" >> $env:GITHUB_ENV
                    Add-Content -path $env:GITHUB_ENV -value "powerPlatformSolutionPath=$file" 
                    return;
                }
            }
            Write-Warning "Not able to find Power Platform solution file in ${{inputs.artifactPath}}"
            return 1;
  
    - name: Unpack solution artifact
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ env.powerPlatformSolutionPath }}
        solution-folder: .artifacts/tempPPSolution/source
        solution-type: "Unmanaged"
        process-canvas-apps: true

    - name: Rebuild solution
      uses: BusinessCentralDemos/AL-Go-Actions/BuildPowerPlatform@PowerPlatform
      with:
        shell: ${{ inputs.shell }}
        parentTelemetryScopeJson: ${{ inputs.parentTelemetryScopeJson }}
        solutionFolder: .artifacts/tempPPSolution/source
        outputFolder: .artifacts/tempPPSolution
        outputFileName: ppsolution

    - name: Publish solution to Power Platform (userName)
      if: ${{ env.userName != '' }}
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        user-name: ${{env.userName}}
        password-secret: ${{env.password}}
        environment-url: ${{env.environmentUrl}}
        solution-file: .artifacts/tempPPSolution/ppsolution.zip
        force-overwrite: true
        publish-changes: true

    - name: Publish solution to Power Platform (ApplicationId)
      if: ${{ env.applicationId != '' }}
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.environmentUrl}}
        tenant-id: ${{env.tenantId}}
        app-id: ${{env.applicationId}}
        client-secret: ${{env.clientSecret}}
        solution-file: .artifacts/tempPPSolution/ppsolution.zip
        force-overwrite: true
        publish-changes: true

branding:
  icon: terminal
  color: blue
