name: GetPowerPlatformChanges
author: Andersg
inputs:
  shell:
    description: Shell in which you want to run the action (powershell or pwsh)
    required: false
    default: powershell
  actor:
    description: The GitHub actor running the action
    required: false
    default: ${{ github.actor }}
  token:
    description: The GitHub token running the action
    required: false
    default: ${{ github.token }}
  parentTelemetryScopeJson:
    description: Specifies the parent telemetry scope for the telemetry signal
    required: false
    default: "7b7d"
  solutionName:
    description: The Power Platform solution to get the changes from.
    required: true
  password: 
    description: The password to use to connect to the Power Platform environment.
    required: true
  userName: 
    description: The user name to use to connect to the Power Platform environment.
    required: true
  environmentUrl:
    description: The URL to the Power Platform environment.
    required: true
  directCommit: 
    description: If true, the changes will be committed directly to the branch. If false, the changes will be added to a pull request.
    required: false
    default: false

runs:
  using: composite
  steps:
      - name: Set up temporary folder
        shell: ${{ inputs.shell }}
        run: mkdir -p powerPlatform/tempPullChanges

      - name: Who am I
        uses: microsoft/powerplatform-actions/who-am-i@v0
        with:
          user-name: ${{inputs.userName}}
          password-secret: ${{inputs.password}}
          environment-url: ${{inputs.environmentUrl}}

      - name: export-solution action
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          user-name: ${{inputs.userName}}
          password-secret: ${{inputs.password}}
          environment-url: ${{inputs.environmentUrl}}
          solution-name: ${{inputs.solutionName}}
          solution-output-file: powerPlatform/tempPullChanges\${{inputs.solutionName}}.zip

      - name: unpack-solution action
        uses: microsoft/powerplatform-actions/unpack-solution@v0
        with:
          solution-file: powerPlatform/tempPullChanges\${{inputs.solutionName}}.zip
          solution-folder: powerPlatform/tempPullChanges\${{inputs.solutionName}}
          solution-type: "Unmanaged"
          overwrite-files: true
          process-canvas-apps: true

      - name: Remove zip file
        shell: ${{ inputs.shell }}
        run: rm powerPlatform/tempPullChanges\${{inputs.solutionName}}.zip

      - name: Commit to git (not working yet)
        shell: ${{ inputs.shell }}
        run: |
          write-output ${{ inputs.directCommit }}
          ls powerPlatform/tempPullChanges\${{inputs.solutionName}}
          ls powerPlatform/tempPullChanges

branding:
  icon: terminal
  color: blue

